# This docker-compose is for development only
# For production, the docker-compose.prod.yml will be defined in portainer.io

services:
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    container_name: co-op-mode-api
    restart: unless-stopped
    environment:
      DOMAIN: localhost
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@co-op-mode-postgres:5432/postgres
      REDIS_URL: redis://co-op-mode-redis:6379
      PLIVO_AUTH_ID: ${PLIVO_AUTH_ID}
      PLIVO_TOKEN: ${PLIVO_TOKEN}
      PLIVO_APP_UUID: ${PLIVO_APP_UUID}
      API_PORT: 80
    depends_on:
      - database
      - redis
      - rabbitmq
    volumes:
      - type: bind
        source: "./api"
        target: "/app"
    command: yarn run dev
    ports:
      - 3000:80
    networks:
      - default

  # api_v2:
  #   build:
  #     context: .
  #     dockerfile: ./api_v2/Dockerfile
  #   container_name: co-op-mode-api-v2
  #   restart: unless-stopped
  #   environment:
  #     DOMAIN: localhost
  #     DATABASE_URL: postgres://postgres:postgres@co-op-mode-postgres:5432/postgres
  #     REDIS_URL: redis://co-op-mode-redis:6379
  #     PLIVO_AUTH_ID: ${PLIVO_AUTH_ID}
  #     PLIVO_TOKEN: ${PLIVO_TOKEN}
  #     PLIVO_APP_UUID: ${PLIVO_APP_UUID}
  #     JWT_SECRET: ${JWT_SECRET}
  #     API_PORT: 8100
  #   depends_on:
  #     - database
  #     - redis
  #     - rabbitmq
  #   volumes:
  #     - type: bind
  #       source: "./api_v2"
  #       target: "/app"
  #     - type: bind
  #       source: "./schema.proto"
  #       target: "/app/schema.proto"
  #   command: cargo watch -x run
  #   ports:
  #     - 8100:8100
  #   networks:
      # - default

  routines:
    build:
      context: ./routines
      dockerfile: ./Dockerfile
    container_name: co-op-mode-routines
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@co-op-mode-postgres:5432/postgres
    depends_on:
      - api
      - database
    volumes:
      - type: bind
        source: "./routines"
        target: "/app"
    command: yarn run dev
    networks:
      - default

  analytics:
    build:
      context: ./analytics
      dockerfile: ./Dockerfile
    container_name: co-op-mode-analytics
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@co-op-mode-postgres:5432/postgres
      REDIS_URL: redis://co-op-mode-redis:6379
    depends_on:
      - database
      - redis
      - rabbitmq
    volumes:
      - type: bind
        source: "./analytics"
        target: "/app"
    command: yarn run dev
    networks:
      - default

  gateway:
    build:
      context: ./gateway
      dockerfile: ./Dockerfile
    container_name: co-op-mode-gateway
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@co-op-mode-postgres:5432/postgres
      RABBITMQ_URL: amqp://co-op-mode-rabbitmq
      REDIS_URL: redis://co-op-mode-redis:6379
      PORT: 80
    depends_on:
      - api
      - analytics
      - database
    volumes:
      - type: bind
        source: "./gateway"
        target: "/app"
    command: yarn run dev
    ports:
      - 4000:80 
    networks:
      - default

  database:
    image: postgres:16.1-bullseye
    container_name: co-op-mode-postgres
    restart: unless-stopped
    user: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - default

  redis:
    image: redis:latest
    container_name: co-op-mode-redis
    restart: unless-stopped
    networks:
      - default
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3.13.3-management
    container_name: co-op-mode-rabbitmq
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - default

  # Postgres web-based database tool, development only
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: co-op-mode-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@navarrotech.net
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - 5050:80
    networks:
      - default
    depends_on:
      - database
    volumes:
      - ./pgadmin4/servers.json:/pgadmin4/servers.json
      - ./pgadmin4/pgpassfile:/pgpassfile
      - pgadmin-data:/var/lib/pgadmin

  # Redis web-based database tool, development only
  insight:
    image: redis/redisinsight:latest
    container_name: co-op-mode-redis-insight
    restart: unless-stopped
    environment:
      REDIS_HOSTS: '[{"host": "co-op-mode-redis", "port": "6379"}]'
    ports:
      - 5540:5540
    networks:
      - default
    volumes:
      - insight-data:/data

volumes:
  postgres-data:
  redis-data:
  pgadmin-data:
  insight-data:
  db:
  app_network:

networks:
  default:
